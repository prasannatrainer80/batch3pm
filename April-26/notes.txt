Joins : Joins allows you to extract data from more than one table. But for joins the table needs to be mapped w.r.t. parent and child relationship, then only we can trust the data from the tables retrieved. 

There are various types of joins known as

(i) Inner Join : Acts as a intersect operator. Used to extract only the common records from the given table(s). 

select field(s) from parent_table INNER JOIN child_table on parent_table.primarykey = child_table.primarykey

DEPT

deptno	int	NO	PRI		
dname	varchar(14)	YES			
loc	varchar(13)	YES			

EMP

empno	int	NO	PRI		
ename	varchar(10)	YES			
job	varchar(9)	YES			
mgr	int	YES			
hiredate	date	YES			
sal	int	YES			
comm	int	YES			
deptno	int	YES	MUL	


Alias : We can give alias names to tables, columns and queries for simplication and reusablity. 

EmployDetails

EmpId	int	NO	PRI		
Name	varchar(30)	YES			
Gender	enum('MALE','FEMALE')	YES			
Department	varchar(30)	YES			
Desig	varchar(30)	YES			
Basic	decimal(9,2)	YES			


LeaveDetails

LeaveID	int	NO	PRI		auto_increment
EmpId	int	YES	MUL		
LeaveStartDate	date	YES			
LeaveEndDate	date	YES			
LeaveReason	varchar(30)	YES			
LeaveType	enum('EL','PL','ML')	YES			
ManagerComments	varchar(30)	YES			


Courses

CCODE	int	NO	PRI		auto_increment
NAME	varchar(30)	NO			
DURATION	int	NO			
FEE	int	NO			
PREREQUISITE	varchar(100)	NO			


Faculty

FACCODE	int	NO	PRI		auto_increment
NAME	varchar(30)	NO			
QUAL	varchar(30)	NO			
EXP	varchar(100)	NO			

Batches

BCODE	int	NO	PRI		auto_increment
CCODE	int	NO	MUL		
FACCODE	int	NO	MUL		
STDATE	date	NO			
ENDDATE	date	NO			
TIMING	enum('1','2','3')	NO			

Students

ROLLNO	int	NO	PRI		auto_increment
BCODE	int	NO	MUL		
NAME	varchar(30)	NO			
GENDER	char(1)	NO			
DJ	date	NO			
PHONE	varchar(10)	NO			
EMAIL	varchar(30)	NO			

Customers
CustomerID	int	NO	PRI	
FirstName	varchar(30)	YES		
LastName	varchar(30)	YES		
Email	varchar(30)	YES		
Phone	varchar(30)	YES		
Address	varchar(30)	YES		

Products

ProductID	int	NO	PRI		
ProductName	varchar(30)	YES			
Description	varchar(50)	YES			
Price	decimal(9,2)	YES			

Orders

OrderID	int	NO	PRI	
CustomerID	int	YES	MUL	
OrderDate	varchar(30)	YES		
TotalAmount	decimal(9,2)	YES		

	
OrderDetails

OrderDetailID	int	NO	PRI		
OrderID	int	YES	MUL		
ProductID	int	YES	MUL		
Quantity	int	YES			

(ii) Outer Join : Inner Join Only extracts common records from the given tables, but if you want to extract both matching and unmatching records from the given tables, then we need the help of outer join. 

	-> LEFT Outer Join : All records from the left-side table and matching records from the right-side 				table. If any child table record values are not exists, then it replaced with 				NULL keyword.

	-> Right Outer Join : All records from the right-side table, and matching records from the left-side 			table.

(iii) Cross Join : Generates cartician product of given tables. As table a contains n records and table B contains m records then it generates (n*m) records. If table A contains 10 records and Table B contains 4 records, then it shows 40 records total. 

(iv) Self Join : If a table joins with itself known as self-join. As because of self join we eliminated hierarhchical relationship, when you represent levels of data, then we need the help of self join. 


Subqueries : 
______________

Sometimes it is difficult to extract expected data by using single sql statement. To overcome this we need the help of subquery. 

A subquery is a query, that which is having another query inside, the query which is inside known as inner query, the query which is outside known as outer query. 

Everytime the result of inner query will be send as input to the outer query. 

There are various types of subqueries as

1) Single Row Subqueries : A subquery that which returns only single row from the given query. 

2) Multi Row Subqueries  : A subquery that which returns more than one row from the given subquery.


If a query returns more than one row, we can handle them by using 

ALL or ANY operator 

All operator acts as AND operator

ANY Operator acts as OR operator

Example : 

empno <> ALL(10,20,30) means

Empno <> 10 AND empno <> 20 and Empno <> 30 


Empno <> ANY(10,20,30) means 

Empno = 10 OR Empno = 20 OR Empno = 30


















